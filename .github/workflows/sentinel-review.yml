name: Sentinel Review

on:
  # 1) Запуск по кнопке в Actions
  workflow_dispatch:
    inputs:
      profiles:
        description: "Comma-separated profiles (e.g. frontend,backend)"
        required: false
      max_comments:
        description: "Inline annotations cap"
        required: false
        default: "30"
      fail_on:
        description: "none|major|critical"
        required: false
        default: "major"

  # 2) Запуск по комменту в PR: /sentinel review [frontend,backend]
  issue_comment:
    types: [created]

permissions:
  contents: read
  checks: write
  pull-requests: write

# ────────────────────────────────────────────────────────────────────────────────
# A) Кнопка: прямо вызываем reusable workflow c переданными инпутами
# ────────────────────────────────────────────────────────────────────────────────
jobs:
  from_button:
    if: github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/sentinel-review-reusable.yml
    with:
      profiles:     ${{ inputs.profiles }}
      max_comments: ${{ inputs.max_comments }}
      fail_on:      ${{ inputs.fail_on }}

# ────────────────────────────────────────────────────────────────────────────────
# B) Комментарий: сначала парсим профили → затем вызываем reusable workflow
#   Пишем комментарий в PR:
#     /sentinel review
#     /sentinel review frontend,backend
# ────────────────────────────────────────────────────────────────────────────────
  parse_comment:
    if: >
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/sentinel review')
    runs-on: ubuntu-latest
    outputs:
      profiles: ${{ steps.mk.outputs.profiles }}
    steps:
      - name: Parse profiles from comment
        id: mk
        shell: bash
        run: |
          set -euo pipefail
          BODY="${{ github.event.comment.body }}"
          # Возьмём всё после "/sentinel review"
          RAW=$(echo "$BODY" | sed -n 's#^/sentinel review[[:space:]]*##p' | tr -d '\r' | tr -d '\n')
          echo "profiles=$RAW" >> "$GITHUB_OUTPUT"

  from_comment:
    needs: parse_comment
    if: >
      github.event_name == 'issue_comment' &&
      github.event.issue.pull_request &&
      startsWith(github.event.comment.body, '/sentinel review')
    uses: ./.github/workflows/sentinel-review-reusable.yml
    with:
      # Если RAW пустой — внутри reusable сделай авто-детект профилей как раньше
      profiles:     ${{ needs.parse_comment.outputs.profiles }}
      # Хочешь — поменяй дефолты здесь
      max_comments: "30"
      fail_on:      "major"
